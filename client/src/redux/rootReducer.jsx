import { createSlice } from "@reduxjs/toolkit";

// Define the initial state for the slice
const initialState = {
  cartItems: [],
  loading: false,
};

// Create a slice for the rootReducer
const rootSlice = createSlice({
  name: "rootReducer",
  initialState,
  reducers: {
    // Define your reducers here
    showLoading(state, action) {
      return {
        ...state,
        loading: true,
      };
    },
    hideLoading(state, action) {
      return {
        ...state,
        loading: false,
      };
    },
    setCartItems(state, action) {
      state.cartItems = action.payload;
    },
    addItemToCart(state, action) {
      state.cartItems.push(action.payload);
    },
    removeItemFromCart(state, action) {
      state.cartItems = state.cartItems.filter(
        (item) => item.id !== action.payload.id
      );
    },
    updateCart(state, action) {
      return {
        ...state,
        cartItems: state.cartItems.map((item) =>
          item._id === action.payload._id
            ? { ...item, quantity: action.payload.quantity }
            : item
        ),
      };
    },
    deleteCart(state, action) {
      return {
        ...state,
        cartItems: state.cartItems.filter(
          (item) => item._id !== action.payload._id
        ),
      };
    },
  },
});

// Export actions generated by createSlice
export const {
  setLoading,
  setCartItems,
  addItemToCart,
  removeItemFromCart,
  showLoading,
  hideLoading,
} = rootSlice.actions;

// Export the reducer to be used in the store
export default rootSlice.reducer;
